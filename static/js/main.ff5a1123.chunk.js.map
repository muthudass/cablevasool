{"version":3,"sources":["App.js","index.js"],"names":["App","useState","buttonColor","setButtonColor","buttonType","setButtonType","buttonSizeMode","setButtonSizeMode","buttonWidth","setButtonWidth","buttonHeight","setButtonHeight","isTop","window","top","className","value","onChange","event","target","type","checked","min","max","Number","disabled","environment","paymentRequest","apiVersion","apiVersionMinor","allowedPaymentMethods","parameters","allowedAuthMethods","allowedCardNetworks","tokenizationSpecification","gateway","merchantInfo","merchantId","merchantName","transactionInfo","totalPriceStatus","totalPriceLabel","totalPrice","currencyCode","countryCode","onLoadPaymentData","console","log","style","width","height","display","href","ReactDOM","render","document","getElementById"],"mappings":"4LAIe,SAASA,IACtB,IAD4B,EAgCUC,mBAAS,WAhCnB,mBAgCrBC,EAhCqB,KAgCRC,EAhCQ,OAiCQF,mBAAS,OAjCjB,mBAiCrBG,EAjCqB,KAiCTC,EAjCS,OAkCgBJ,mBAAS,UAlCzB,mBAkCrBK,EAlCqB,KAkCLC,EAlCK,OAmCUN,mBAAS,KAnCnB,mBAmCrBO,EAnCqB,KAmCRC,EAnCQ,OAoCYR,mBAAS,IApCrB,mBAoCrBS,EApCqB,KAoCPC,EApCO,KAsCtBC,EAAQC,SAAWA,OAAOC,IAEhC,OACE,gCACE,uBAAMC,UAAU,aAAhB,UACE,wBAAOA,UAAU,UAAjB,UACE,gDACA,yBACEC,MAAOd,EACPe,SAAU,SAAAC,GAAK,OAAIf,EAAee,EAAMC,OAAOH,QAFjD,UAIE,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,yBAGJ,wBAAOD,UAAU,UAAjB,UACE,+CACA,yBACEC,MAAOZ,EACPa,SAAU,SAAAC,GAAK,OAAIb,EAAca,EAAMC,OAAOH,QAFhD,UAIE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,SAAd,0BAGJ,kCACE,uBACEI,KAAK,WACLC,QAA4B,SAAnBf,EACTW,SAAU,SAAAC,GAAK,OACbX,EAAkBW,EAAMC,OAAOE,QAAU,OAAS,aAGtD,yDAEF,wBAAON,UAAU,UAAjB,UACE,iDACe,uBAAMA,UAAU,QAAhB,cAA0BP,EAA1B,YAEf,uBACEY,KAAK,QACLE,IAAI,MACJC,IAAI,MACJP,MAAOR,EACPS,SAAU,SAAAC,GAAK,OAAIT,EAAee,OAAON,EAAMC,OAAOH,SACtDS,SAA6B,SAAnBnB,OAGd,wBAAOS,UAAU,UAAjB,UACE,kDACgB,uBAAMA,UAAU,QAAhB,cAA0BL,EAA1B,YAEhB,uBACEU,KAAK,QACLE,IAAI,KACJC,IAAI,MACJP,MAAON,EACPO,SAAU,SAAAC,GAAK,OAAIP,EAAgBa,OAAON,EAAMC,OAAOH,SACvDS,SAA6B,SAAnBnB,UAKhB,qBAAKS,UAAU,OAAf,SACE,cAAC,IAAD,CACEW,YAAY,OACZxB,YAAaA,EACbE,WAAYA,EACZE,eAAgBA,EAChBqB,eA5Ge,CACrBC,WAAY,EACZC,gBAAiB,EACjBC,sBAAuB,CACrB,CACEV,KAAM,OACNW,WAAY,CACVC,mBAAoB,CAAC,WAAY,kBACjCC,oBAAqB,CAAC,aAAc,SAEtCC,0BAA2B,CACzBd,KAAM,kBACNW,WAAY,CACVI,QAAS,cAKjBC,aAAc,CACZC,WAAY,uBACZC,aAAc,iBAEhBC,gBAAiB,CACfC,iBAAkB,QAClBC,gBAAiB,QACjBC,WAAY,QACZC,aAAc,MACdC,YAAa,OAkFTC,kBAAmB,SAAAlB,GACjBmB,QAAQC,IAAI,oBAAqBpB,IAEnCqB,MAAO,CAAEC,MAAOzC,EAAa0C,OAAQxC,OAIzC,sBAAKK,UAAU,OAAOiC,MAAO,CAAEG,QAASvC,EAAQ,OAAS,IAAzD,UACE,+GAIA,8BACE,mBAAGwC,KAAK,IAAIjC,OAAO,SAAnB,gCADF,aCzHRkC,IAASC,OAAO,cAACtD,EAAD,IAASuD,SAASC,eAAe,W","file":"static/js/main.ff5a1123.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport GooglePayButton from \"@google-pay/button-react\";\nimport \"./style.css\";\n\nexport default function App() {\n  const paymentRequest = {\n    apiVersion: 2,\n    apiVersionMinor: 0,\n    allowedPaymentMethods: [\n      {\n        type: \"CARD\",\n        parameters: {\n          allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\n          allowedCardNetworks: [\"MASTERCARD\", \"VISA\"]\n        },\n        tokenizationSpecification: {\n          type: \"PAYMENT_GATEWAY\",\n          parameters: {\n            gateway: \"example\"\n          }\n        }\n      }\n    ],\n    merchantInfo: {\n      merchantId: \"12345678901234567890\",\n      merchantName: \"Demo Merchant\"\n    },\n    transactionInfo: {\n      totalPriceStatus: \"FINAL\",\n      totalPriceLabel: \"Total\",\n      totalPrice: \"10.00\",\n      currencyCode: \"INR\",\n      countryCode: \"IN\"\n    }\n  };\n\n  const [buttonColor, setButtonColor] = useState(\"default\");\n  const [buttonType, setButtonType] = useState(\"buy\");\n  const [buttonSizeMode, setButtonSizeMode] = useState(\"static\");\n  const [buttonWidth, setButtonWidth] = useState(240);\n  const [buttonHeight, setButtonHeight] = useState(40);\n\n  const isTop = window === window.top;\n\n  return (\n    <div>\n      <form className=\"top-bottom\">\n        <label className=\"control\">\n          <span>Button color</span>\n          <select\n            value={buttonColor}\n            onChange={event => setButtonColor(event.target.value)}\n          >\n            <option value=\"default\">default</option>\n            <option value=\"black\">black</option>\n            <option value=\"white\">white</option>\n          </select>\n        </label>\n        <label className=\"control\">\n          <span>Button type</span>\n          <select\n            value={buttonType}\n            onChange={event => setButtonType(event.target.value)}\n          >\n            <option value=\"buy\">buy</option>\n            <option value=\"plain\">plain</option>\n            <option value=\"donate\">donate</option>\n          </select>\n        </label>\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={buttonSizeMode === \"fill\"}\n            onChange={event =>\n              setButtonSizeMode(event.target.checked ? \"fill\" : \"static\")\n            }\n          />\n          <span>Custom button size</span>\n        </label>\n        <label className=\"control\">\n          <span>\n            Button width <span className=\"value\">({buttonWidth}px)</span>\n          </span>\n          <input\n            type=\"range\"\n            min=\"160\"\n            max=\"800\"\n            value={buttonWidth}\n            onChange={event => setButtonWidth(Number(event.target.value))}\n            disabled={buttonSizeMode !== \"fill\"}\n          />\n        </label>\n        <label className=\"control\">\n          <span>\n            Button height <span className=\"value\">({buttonHeight}px)</span>\n          </span>\n          <input\n            type=\"range\"\n            min=\"40\"\n            max=\"100\"\n            value={buttonHeight}\n            onChange={event => setButtonHeight(Number(event.target.value))}\n            disabled={buttonSizeMode !== \"fill\"}\n          />\n        </label>\n      </form>\n\n      <div className=\"demo\">\n        <GooglePayButton\n          environment=\"TEST\"\n          buttonColor={buttonColor}\n          buttonType={buttonType}\n          buttonSizeMode={buttonSizeMode}\n          paymentRequest={paymentRequest}\n          onLoadPaymentData={paymentRequest => {\n            console.log(\"load payment data\", paymentRequest);\n          }}\n          style={{ width: buttonWidth, height: buttonHeight }}\n        />\n      </div>\n\n      <div className=\"note\" style={{ display: isTop ? \"none\" : \"\" }}>\n        <p>\n          Note: This page may need to open in a new window for it to function\n          correctly.\n        </p>\n        <p>\n          <a href=\"/\" target=\"_blank\">\n            Open in new window\n          </a>\n          .\n        </p>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}