{"version":3,"sources":["config/axios-config.js","store/auth-slice.js","pages/login/login.js","utilities/side-menu.js","components/custom-drawer.js","store/main-menu-slice.js","pages/main/main.js","components/custom-card.js","utilities/dashboard-card.js","pages/main/master/admin-dashboard.js","components/common-buttons.js","components/page-header.js","utilities/custom-active.js","pages/main/master/area/area-list.js","utilities/custom-date.js","utilities/custom-column-filter-dropdown.js","utilities/custom-filter-input.js","components/custom-filter.js","components/pagination.js","utilities/const/customer.js","store/customer-colimn-slice.js","pages/main/master/customer/customer-list.js","pages/profile/my-profile.js","config/custom-routes.js","App.js","reportWebVitals.js","store/root-reducer.js","store/store.js","index.js"],"names":["Axios","axios","create","baseURL","interceptors","request","use","config","url","token","sessionStorage","getItem","headers","Authorization","authSlice","createSlice","name","initialState","auth","admin","reducers","login","state","action","payload","logout","saveAdmin","actions","theme","createTheme","Login","dispatch","useDispatch","navigate","useNavigate","React","setError","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","Typography","variant","onSubmit","event","preventDefault","data","FormData","currentTarget","console","log","email","get","password","basicAuth","btoa","method","then","res","setItem","replace","catch","noValidate","mt","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","type","Button","mb","Grid","container","item","xs","href","MasterMenu","ReportsMenu","SideDrawer","openDrawer","closeDrawer","useState","isOpen","setIsOpen","width","setWidth","useEffect","value","$Drawer","anchor","open","onClose","key","Accordion","AccordionSummary","expandIcon","AccordionDetails","List","map","menu","ListItem","button","onClick","link","handleClick","ListItemText","primary","color","styled","MuiDrawer","prop","mainMenuSlice","setOpenDrawer","Main","anchorEl","setAnchorEl","handleClose","flexGrow","position","zIndex","AppBar","Toolbar","IconButton","size","edge","mr","anchorOrigin","vertical","horizontal","transformOrigin","Boolean","MenuItem","removeItem","path","element","to","$MainDiv","div","CustomCard","card","count","$Card","backgroundColor","$CardIcon","icon","$CardDetails","$CardCount","textColor","$CardDesc","desc","$ViewMore","linkColor","style","$FontAwesomeIcon","faArrowAltCircleRight","props","a","FontAwesomeIcon","Card","DashboardCard","faUsers","apiParameter","faStreetView","faBars","faUserPlus","faInr","faListOl","faComments","faCreditCard","AdminDashboard","dashboardCounts","setDashboardCounts","useSelector","flexFlow","index","StyledMenu","elevation","borderRadius","spacing","minWidth","palette","mode","grey","boxShadow","padding","fontSize","text","secondary","alpha","main","selectedOpacity","CommonBtns","btnText","handleButtonClick","$Div","$RightGroupBtn","undefined","disableElevation","endIcon","height","MenuListProps","disableRipple","faFileExcel","$ExportSpan","faFilePdf","S","span","PageHeader","header","showExport","handleExcelExport","$H3","h3","CustomActive","active","$ActiveSpan","$InActiveSpan","AreaList","areaList","setAreaList","gridRef","useRef","columnDefs","headerName","field","cellRenderer","status","valueFormatter","date","customDate","length","moment","String","format","CustomDate","aDate","$GridHolder","className","ref","rowData","defaultColDef","sortable","unSortIcon","wrapText","resizable","autoHeight","pagination","paginationPageSize","enableRangeSelection","CustomColumnFilterDropdown","options","currentValue","FormControl","top","InputLabel","Select","labelId","o","CustomFilterInput","CustomFilter","children","CustomPagination","totalRow","handlePageChange","handleChangeRowsPerPage","page","setPage","rowsPerPage","setRowsPerPage","TablePagination","textAlign","rowsPerPageOptions","colSpan","SelectProps","inputProps","native","onPageChange","newPage","onRowsPerPageChange","parseInt","target","ActionsComponent","TablePaginationActions","useTheme","flexShrink","ml","disabled","direction","Math","ceil","max","customerColumn","customerColumnSlice","customerSelectedColumn","setCustomerSelectedColumn","CustomerList","drawer","mainMenu","customerList","setCustomerList","customerListCount","setCustomerListCount","selectedColumn","setSelectedColumn","customerFilter","pageIndex","pageSize","serialNo","asNo","customerName","customerCode","mobile","area","plan","group","stbNo","balance","billDate","lastUpdate","sortBy","customerCount","allColumnIds","current","columnApi","getAllColumns","forEach","column","push","getId","autoSizeColumns","customerActive","filter","floatingFilter","editable","floatingFilterComponent","floatingFilterComponentParams","suppressFilterButton","comparator","expiryDate","api","exportDataAsExcel","fileName","columnKeys","c","marginLeft","float","faUpload","$MultiSelect","onChange","e","some","sc","setColumnVisible","handleMultiSelect","labelledBy","pageRow","onGridReady","onSortChanged","getColumnState","serverSideStoreType","onFilterChanged","getFilterModel","sideBar","MultiSelect","MyProfile","setAdmin","username","handleCancel","adminSchema","Yup","shape","companyName","min","enableReinitialize","initialValues","location","headerInfo","headerInfo1","smsTextEnglish","smsTextTamil","smsMode","language","adminSmsServer","address","lastLogin","payment","profileChange","remarks","renewal","smsCount","smsSever","upiId","validationSchema","values","setFieldValue","handleSubmit","handleChange","errors","$Typography","containersx","$RequireSpan","InputProps","startAdornment","InputAdornment","multiline","RadioGroup","row","FormControlLabel","control","Radio","Object","keys","CustomRoutes","AuthenticatedRoute","useLocation","from","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","authReducer","persistConfig","storage","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.5eb09ffe.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst Axios = axios.create({\n    baseURL: 'http://148.66.134.209:8080/api/'\n});\n\nexport default Axios;\n\n// Add a request interceptor\nAxios.interceptors.request.use(function (config) {\n    // console.log('axios interceptor', config)\n\n    if(config.url === 'login') return config;\n\n    const token = sessionStorage.getItem('basicauth')\n    config.headers.Authorization =  token;\n\n    return config;\n});","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const authSlice = createSlice({\n  name: \"authSlice\",\n  initialState: {\n    auth: {},\n    admin: {},\n  },\n  reducers: {\n    login: (state, action) => {\n      state.auth = action.payload;\n    },\n    logout: (state) => {\n      state.auth = {};\n    },\n    saveAdmin: (state, action) => {\n      state.admin = action.payload;\n    }\n  },\n});\n\nexport const { login, logout, saveAdmin } = authSlice.actions;\n\nexport default authSlice.reducer;\n","import * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import Checkbox from '@mui/material/Checkbox';\n// import Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport Axios from \"../../config/axios-config\";\nimport { useDispatch } from \"react-redux\";\nimport { login, saveAdmin } from \"../../store/auth-slice\";\nimport { useNavigate } from \"react-router-dom\";\n\n// function Copyright(props) {\n//   return (\n//     <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n//       {'Copyright © '}\n//       <Link color=\"inherit\" href=\"https://mui.com/\">\n//         Your Website\n//       </Link>{' '}\n//       {new Date().getFullYear()}\n//       {'.'}\n//     </Typography>\n//   );\n// }\n\nconst theme = createTheme();\n\nexport default function Login() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [error, setError] = React.useState(false);\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    console.log({\n      email: data.get(\"username\"),\n      password: data.get(\"password\"),\n    });\n    const basicAuth =\n      \"Basic \" + btoa(data.get(\"username\") + \":\" + data.get(\"password\"));\n    const headers = {\n      Authorization: basicAuth,\n    };\n\n    Axios({\n      url: \"login\",\n      method: \"get\",\n      headers: headers,\n    })\n      .then((res) => {\n        // console.log('res', res)\n        dispatch(login(res.data));\n        sessionStorage.setItem(\"basicauth\", basicAuth);\n        sessionStorage.setItem(\"username\", data.get(\"username\"));\n        Axios({\n          url: \"findAdmin/\" + data.get(\"username\"),\n          method: \"get\",\n        }).then((res) => {\n          dispatch(saveAdmin(res.data));\n          navigate(\"/\", { replace: true });\n        });\n      })\n      .catch(() => {\n        setError(true);\n      });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 15,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              autoComplete=\"username\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            {/* <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            /> */}\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            {/* <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid> */}\n            <Grid container>\n              <Grid item xs={12}>\n                <div>\n                  For Sales & Support -{\" \"}\n                  <a href=\"tel:+91 9894132227\">9894132227</a>\n                </div>\n              </Grid>\n              <Grid item xs={12}>\n                <div>\n                  Customer Support - <a href=\"tel:+91 9095132227\">9095132227</a>\n                </div>\n              </Grid>\n              <Grid item xs={12}>\n                <div>\n                  Email :{\" \"}\n                  <a href=\"mailto:cablevasool7@gmail.com\">\n                    cablevasool7@gmail.com\n                  </a>\n                </div>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        {/* <Copyright sx={{ mt: 8, mb: 4 }} /> */}\n      </Container>\n    </ThemeProvider>\n  );\n}\n","\nexport const MasterMenu = [\n    {\n        \"name\": \"Area\",\n        \"link\": \"area\"\n    },\n    {\n        \"name\": \"Tariff Name\",\n        \"link\": \"\"\n    },\n    {\n        \"name\": \"Group\",\n        \"link\": \"\"\n    },\n    {\n        \"name\": \"Supervisor\",\n        \"link\": \"\"\n    },\n    {\n        \"name\": \"Customer\",\n        \"link\": \"customer\"\n    },\n    {\n        \"name\": \"Customer Update\",\n        \"link\": \"\"\n    },\n    {\n        \"name\": \"Disconnect or Reconnect\",\n        \"link\": \"\"\n    },\n    {\n        \"name\": \"Bill Generation\",\n        \"link\": \"\"\n    },\n    {\n        \"name\": \"SMS\",\n        \"link\": \"\"\n    },\n    {\n        \"name\": \"Service Request\",\n        \"link\": \"\"\n    }\n]\n\nexport const ReportsMenu = [\n    {\n        \"name\": \"Customer Report\",\n        \"link\": \"\"\n    },\n    {\n        \"name\": \"Collection Report\",\n        \"link\": \"\"\n    },\n    {\n        \"name\": \"Adjustment Report\",\n        \"link\": \"\"\n    },\n    {\n        \"name\": \"Bill Generation Report\",\n        \"link\": \"\"\n    },\n    {\n        \"name\": \"Paid Pending Report\",\n        \"link\": \"\"\n    },\n    {\n        \"name\": \"Collection Report - Supervisor\",\n        \"link\": \"\"\n    },\n    {\n        \"name\": \"Collection Report - Area\",\n        \"link\": \"\"\n    },\n    {\n        \"name\": \"SMS Report\",\n        \"link\": \"\"\n    },\n    {\n        \"name\": \"Bulk Deactivate\",\n        \"link\": \"\"\n    },\n    {\n        \"name\": \"Bulk Recharge\",\n        \"link\": \"\"\n    },\n    {\n        \"name\": \"Payment Approval\",\n        \"link\": \"\"\n    }\n]","import React, { useEffect, useState } from \"react\";\nimport Accordion from \"@mui/material/Accordion\";\nimport {\n  AccordionDetails,\n  AccordionSummary,\n  List,\n  ListItem,\n} from \"@mui/material\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { MasterMenu, ReportsMenu } from \"../utilities/side-menu\";\nimport { useNavigate } from \"react-router-dom\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport styled from \"styled-components\";\n\nconst SideDrawer = ({ openDrawer, closeDrawer }) => {\n  const [isOpen, setIsOpen] = useState(openDrawer);\n  const [width, setWidth] = useState(\"0px\");\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setIsOpen(openDrawer);\n    if (openDrawer) {\n      setWidth(\"225px\");\n    } else {\n      setWidth(\"0px\");\n    }\n  }, [openDrawer]);\n\n  const toggleDrawer = (value) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setIsOpen(value);\n    closeDrawer();\n  };\n\n  const handleClick = (menu) => {\n    // closeDrawer();\n    navigate(menu.link, { replace: true });\n  };\n\n  return (\n    <$Drawer\n      variant=\"permanent\"\n      anchor={\"left\"}\n      open={isOpen}\n      onClose={toggleDrawer(false)}\n      width={width}\n    >\n      <Accordion sx={{ margin: \"0px !important\" }}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography>Master</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <List>\n            {MasterMenu.map((menu) => (\n              <ListItem\n                button\n                key={menu.name}\n                onClick={() => handleClick(menu)}\n              >\n                <ListItemText primary={menu.name} sx={{ color: \"#337ab7\" }} />\n              </ListItem>\n            ))}\n          </List>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography>Reports</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <List>\n            {ReportsMenu.map((menu) => (\n              <ListItem button key={menu.name}>\n                <ListItemText primary={menu.name} sx={{ color: \"#337ab7\" }} />\n              </ListItem>\n            ))}\n          </List>\n        </AccordionDetails>\n      </Accordion>\n    </$Drawer>\n  );\n};\n\nexport default SideDrawer;\n\n// const $Drawer = styled(Drawer, {\n//   shouldForwardProp: (prop) => prop !== \"color\" && prop !== 'myProp',\n// })(({open}) => ({\n//   \"& .MuiDrawer-paper\": {\n//     top: '4em',\n//     height: '90%',\n//     marginBottom: '8px',\n//     width: open === 'true' ? '225px' : '0px',\n//   }\n// }));\n\nconst $Drawer = styled(MuiDrawer)`\n  transition: width 2s;\n  -webkit-transition: width 2s;\n  .MuiDrawer-paper {\n    top: 4em;\n    height: 90%;\n    margin-bottom: 8px;\n    width: ${(prop) => prop.width};\n    transition: width 0.5s;\n    -webkit-transition: width 0.5s;\n  }\n`;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const mainMenuSlice = createSlice({\r\n  name: \"mainMenuSlice\",\r\n  initialState: {\r\n    openDrawer: false,\r\n  },\r\n  reducers: {\r\n    setOpenDrawer: (state, action) => {\r\n      state.openDrawer = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setOpenDrawer } = mainMenuSlice.actions;\r\n\r\nexport default mainMenuSlice.reducer;\r\n","import React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport SideDrawer from \"../../components/custom-drawer\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../../store/auth-slice\";\nimport { useNavigate } from \"react-router\";\nimport { Navigate, Outlet, Route, Routes } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { setOpenDrawer } from \"../../store/main-menu-slice\";\n\nconst Main = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  // const [auth, setAuth] = useState(true);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMyProfile = () => {\n    handleClose();\n    navigate(\"/my-profile\", { replace: true });\n  };\n\n  const handleLogout = () => {\n    handleClose;\n    sessionStorage.removeItem(\"basicauth\");\n    sessionStorage.removeItem(\"username\");\n    dispatch(logout());\n    navigate(\"/login\", { replace: true });\n  };\n\n  return (\n    <>\n      <Box sx={{ flexGrow: 1, position: \"sticky\", zIndex: 10000 }}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              size=\"large\"\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"menu\"\n              sx={{ mr: 2 }}\n              onClick={() => {\n                setIsOpen(!isOpen);\n                dispatch(setOpenDrawer(!isOpen))\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              Cable Vasool\n            </Typography>\n            <div>\n              <IconButton\n                size=\"large\"\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"right\",\n                }}\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleMyProfile}>My Profile</MenuItem>\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n              </Menu>\n            </div>\n          </Toolbar>\n        </AppBar>\n      </Box>\n      {/* {isOpen && (\n        <SideDrawer openDrawer={isOpen} closeDrawer={() => setIsOpen(false)} />\n      )} */}\n      <SideDrawer openDrawer={isOpen} closeDrawer={() => setIsOpen(false)} />\n\n      {\n        <Routes>\n          {/* <Route path=\"dashboard\" element={<AdminDashboard />} /> */}\n          <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\n        </Routes>\n      }\n      <$MainDiv isOpen={isOpen}>\n        <Outlet />\n      </$MainDiv>\n    </>\n  );\n};\n\nexport default Main;\n\nconst $MainDiv = styled.div`\n  border: 1px solid #e7dede;\n  margin: 10px;\n  border-radius: 5px;\n  box-shadow: 5px 5px 5px 5px #e7dede;\n  max-height: 100%;\n  overflow: scroll;\n  position: fixed;\n  left: ${prop => prop.isOpen ? `240px` : `0%`};\n  width: ${prop => prop.isOpen ? `80%` : `98%`};\n  transition: left 0.5s;\n  -webkit-transition: left 0.5s;\n`;\n","import React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowAltCircleRight } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const CustomCard = ({ card, count = 0 }) => {\n  return (\n    <$Card bgcolor={card.backgroundColor}>\n      <$CardIcon>\n        <FontAwesomeIcon icon={card.icon} />\n      </$CardIcon>\n      <$CardDetails>\n        <$CardCount textColor={card.textColor}>\n          <span>{count}</span>\n        </$CardCount>\n        <$CardDesc textColor={card.textColor}>{card.desc}</$CardDesc>\n      </$CardDetails>\n      <$ViewMore bgcolor={card.linkColor}>\n        <span style={{ color: card.textColor }}>View More</span>\n        <$FontAwesomeIcon icon={faArrowAltCircleRight} />\n      </$ViewMore>\n    </$Card>\n  );\n};\n\nconst $CardDetails = styled.div`\n  position: relative;\n  right: 15px;\n  padding-right: 15px;\n`;\n\nconst $CardCount = styled.div`\n  padding-top: 25px;\n  text-align: right;\n  font-size: 34px;\n  line-height: 36px;\n  letter-spacing: -1px;\n  margin-bottom: 0;\n  font-weight: 300;\n  color: ${(props) => props.textColor};\n`;\n\nconst $CardIcon = styled.div`\n  width: 80px;\n  height: 80px;\n  display: block;\n  float: left;\n  padding-top: 10px;\n  padding-left: 15px;\n  margin-bottom: 15px;\n  font-size: 35px;\n  line-height: 35px;\n  svg {\n    display: inline-block;\n    font: 14px/1 FontAwesome;\n    margin-left: -35px;\n    font-size: 110px;\n    line-height: 110px;\n    color: #fff;\n    opacity: 0.1;\n  }\n`;\n\nconst $CardDesc = styled.div`\n  text-align: right;\n  font-size: 16px;\n  letter-spacing: 0;\n  font-weight: 300;\n  color: ${(props) => props.textColor};\n  opacity: 1;\n`;\n\nconst $ViewMore = styled.a`\n  bottom: -2em;\n  clear: both;\n  display: block;\n  padding: 6px 10px;\n  position: relative;\n  text-transform: uppercase;\n  font-weight: 300;\n  font-size: 11px;\n  opacity: 0.7;\n  color: #fff;\n  background-color: ${(props) => props.bgcolor};\n  text-decoration: none;\n`;\n\nconst $FontAwesomeIcon = styled(FontAwesomeIcon)`\n  display: inline-block;\n  margin-top: 1px;\n  float: right;\n  background-position: -27px -10px;\n`;\nconst $Card = styled(Card)`\n  display: block;\n  margin: 1em;\n  overflow: hidden;\n  border-radius: 4px;\n  background-color: ${(props) => props.bgcolor};\n  width: 20em;\n  height: 10em;\n`;\n","import {\n  faBars,\n  faComments,\n  faCreditCard,\n  faInr,\n  faListOl,\n  faStreetView,\n  faUserPlus,\n  faUsers,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport const DashboardCard = [\n  {\n    icon: faUsers,\n    desc: \"Customers\",\n    backgroundColor: \"#3598dc\",\n    linkColor: \"#258fd7\",\n    textColor: \"#fff\",\n    apiParameter: 'customerCount'\n  },\n  {\n    icon: faStreetView,\n    desc: \"Area\",\n    backgroundColor: \"#5e738b\",\n    linkColor: \"#56697f\",\n    textColor: \"#fff\",\n    apiParameter: 'areaCount'\n  },\n  {\n    icon: faBars,\n    desc: \"SMS Balance\",\n    backgroundColor: \"#1bbc9b\",\n    linkColor: \"#18aa8c\",\n    textColor: \"#fff\",\n    apiParameter: 'smsCount'\n  },\n  {\n    icon: faUserPlus,\n    desc: \"Supervisor\",\n    backgroundColor: \"#e5e5e5\",\n    linkColor: \"#dbdbdb\",\n    textColor: \"#333\",\n    apiParameter: 'supervisorCount'\n  },\n  {\n    icon: faInr,\n    desc: \"Collection Report\",\n    backgroundColor: \"#8e44ad\",\n    linkColor: \"#823e9e\",\n    textColor: \"#fff\",\n    apiParameter: 'collectionCount'\n  },\n  {\n    icon: faListOl,\n    desc: \"Customer Report\",\n    backgroundColor: \"#c49f47\",\n    linkColor: \"#bb953c\",\n    textColor: \"#fff\",\n    apiParameter: ''\n  },\n  {\n    icon: faComments,\n    desc: \"Feedbacks\",\n    backgroundColor: \"#e7505a\",\n    linkColor: \"#e53e49\",\n    textColor: \"#fff\",\n    apiParameter: ''\n  },\n  {\n    icon: faCreditCard,\n    desc: \"Disconnect or Reconnect\",\n    backgroundColor: \"#32c5d2\",\n    linkColor: \"#2bb8c4\",\n    textColor: \"#fff\",\n    apiParameter: ''\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CustomCard } from \"../../../components/custom-card\";\nimport Axios from \"../../../config/axios-config\";\nimport { DashboardCard } from \"../../../utilities/dashboard-card\";\n\nconst AdminDashboard = () => {\n  const [dashboardCounts, setDashboardCounts] = useState({});\n\n  // const auth = useSelector((state) => state.auth.auth);\n  const admin = useSelector((state) => state.auth.admin);\n\n  useEffect(() => {\n    Axios({\n      url: 'getDashboardData/'+admin.id,\n      method: \"get\",\n    }).then((res) => {\n      setDashboardCounts(res.data);\n    })\n\n    return () => {\n      setDashboardCounts({});\n    };\n  }, []);\n\n  return (\n    <div\n      style={{\n        margin: \"3em\",\n        display: \"flex\",\n        flexFlow: \"row wrap\",\n      }}\n    >\n      {DashboardCard.map((card, index) => (\n        <CustomCard card={card} key={index} count={dashboardCounts[card.apiParameter]} />\n      ))}\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n","import { Button } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport S from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFileExcel, faFilePdf } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst StyledMenu = styled((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    anchorOrigin={{\r\n      vertical: \"bottom\",\r\n      horizontal: \"right\",\r\n    }}\r\n    transformOrigin={{\r\n      vertical: \"top\",\r\n      horizontal: \"right\",\r\n    }}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  \"& .MuiPaper-root\": {\r\n    borderRadius: 6,\r\n    marginTop: theme.spacing(1),\r\n    minWidth: 180,\r\n    color:\r\n      theme.palette.mode === \"light\"\r\n        ? \"rgb(55, 65, 81)\"\r\n        : theme.palette.grey[300],\r\n    boxShadow:\r\n      \"rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px\",\r\n    \"& .MuiMenu-list\": {\r\n      padding: \"10px 0\",\r\n      display: \"flow-root\",\r\n    },\r\n    \"& .MuiMenuItem-root\": {\r\n      display: \"block\",\r\n      margin: \"0.5em\",\r\n      \"& .MuiSvgIcon-root\": {\r\n        fontSize: 18,\r\n        color: theme.palette.text.secondary,\r\n        margin: theme.spacing(1.5),\r\n      },\r\n      \"&:active\": {\r\n        backgroundColor: alpha(\r\n          theme.palette.primary.main,\r\n          theme.palette.action.selectedOpacity\r\n        ),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst CommonBtns = ({ btnText, handleButtonClick }) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <$Div>\r\n      {/* <$RightGroupBtn variant=\"contained\" size=\"small\" bgcolor=\"red\">\r\n        PDF\r\n      </$RightGroupBtn>\r\n      <$RightGroupBtn variant=\"contained\" size=\"small\" bgcolor=\"#1d6f42\">\r\n        Excel\r\n      </$RightGroupBtn> */}\r\n      <div>\r\n        <$RightGroupBtn\r\n          id=\"export-button\"\r\n          aria-controls={open ? \"demo-customized-menu\" : undefined}\r\n          aria-haspopup=\"true\"\r\n          aria-expanded={open ? \"true\" : undefined}\r\n          variant=\"contained\"\r\n          disableElevation\r\n          onClick={handleClick}\r\n          endIcon={<KeyboardArrowDownIcon />}\r\n          style={{ height: \"32px\" }}\r\n        >\r\n          Export\r\n        </$RightGroupBtn>\r\n        <StyledMenu\r\n          id=\"demo-customized-menu\"\r\n          MenuListProps={{\r\n            \"aria-labelledby\": \"demo-customized-button\",\r\n          }}\r\n          anchorEl={anchorEl}\r\n          open={open}\r\n          onClose={handleClose}\r\n        >\r\n          <MenuItem onClick={handleClose} disableRipple>\r\n            <FontAwesomeIcon color=\"#008000\" icon={faFileExcel} />\r\n            <$ExportSpan>Excel</$ExportSpan>\r\n          </MenuItem>\r\n          <MenuItem onClick={handleClose} disableRipple>\r\n            <FontAwesomeIcon color=\"red\" icon={faFilePdf} />\r\n            <$ExportSpan>PDF</$ExportSpan>\r\n          </MenuItem>\r\n        </StyledMenu>\r\n      </div>\r\n      <$RightGroupBtn\r\n        variant=\"contained\"\r\n        size=\"small\"\r\n        color=\"primary\"\r\n        onClick={handleButtonClick}\r\n      >\r\n        {btnText}\r\n      </$RightGroupBtn>\r\n    </$Div>\r\n  );\r\n};\r\n\r\nexport default CommonBtns;\r\n\r\nconst $Div = S.div`\r\n  margin: 0.3em 0.3em 0.3em 1em;\r\n  position: relative;\r\n    height: 2em;\r\n`;\r\n\r\nconst $RightGroupBtn = S(Button)`\r\n  &&& {\r\n    position: relative;\r\n    float: right;\r\n    margin: 0 0.3em;\r\n    background-color: ${(prop) => prop.bgcolor};\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst $ExportSpan = S.span`\r\n  margin: 0.5em;\r\n`;\r\n","import React from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport S from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFileExcel, faFilePdf } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst StyledMenu = styled((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    anchorOrigin={{\r\n      vertical: \"bottom\",\r\n      horizontal: \"right\",\r\n    }}\r\n    transformOrigin={{\r\n      vertical: \"top\",\r\n      horizontal: \"right\",\r\n    }}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  \"& .MuiPaper-root\": {\r\n    borderRadius: 6,\r\n    marginTop: theme.spacing(1),\r\n    minWidth: 180,\r\n    color:\r\n      theme.palette.mode === \"light\"\r\n        ? \"rgb(55, 65, 81)\"\r\n        : theme.palette.grey[300],\r\n    boxShadow:\r\n      \"rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px\",\r\n    \"& .MuiMenu-list\": {\r\n      padding: \"10px 0\",\r\n      display: \"flow-root\",\r\n    },\r\n    \"& .MuiMenuItem-root\": {\r\n      display: \"block\",\r\n      margin: \"0.5em\",\r\n      \"& .MuiSvgIcon-root\": {\r\n        fontSize: 18,\r\n        color: theme.palette.text.secondary,\r\n        margin: theme.spacing(1.5),\r\n      },\r\n      \"&:active\": {\r\n        backgroundColor: alpha(\r\n          theme.palette.primary.main,\r\n          theme.palette.action.selectedOpacity\r\n        ),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst PageHeader = ({\r\n  header,\r\n  showExport = true,\r\n  handleButtonClick,\r\n  btnText,\r\n  handleExcelExport,\r\n}) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleExcelExportEvent = () => {\r\n    handleClose();\r\n    handleExcelExport();\r\n  };\r\n\r\n  return (\r\n    <$Div>\r\n      <$H3>{header}</$H3>\r\n      {showExport && (\r\n        <>\r\n          <$RightGroupBtn\r\n            id=\"export-button\"\r\n            aria-controls={open ? \"demo-customized-menu\" : undefined}\r\n            aria-haspopup=\"true\"\r\n            aria-expanded={open ? \"true\" : undefined}\r\n            variant=\"contained\"\r\n            disableElevation\r\n            onClick={handleClick}\r\n            endIcon={<KeyboardArrowDownIcon />}\r\n            style={{ height: \"32px\" }}\r\n          >\r\n            Export\r\n          </$RightGroupBtn>\r\n          <StyledMenu\r\n            id=\"demo-customized-menu\"\r\n            MenuListProps={{\r\n              \"aria-labelledby\": \"demo-customized-button\",\r\n            }}\r\n            anchorEl={anchorEl}\r\n            open={open}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem onClick={handleExcelExportEvent} disableRipple>\r\n              <FontAwesomeIcon color=\"#008000\" icon={faFileExcel} />\r\n              <$ExportSpan>Excel</$ExportSpan>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleClose} disableRipple>\r\n              <FontAwesomeIcon color=\"red\" icon={faFilePdf} />\r\n              <$ExportSpan>PDF</$ExportSpan>\r\n            </MenuItem>\r\n          </StyledMenu>\r\n        </>\r\n      )}\r\n      <$RightGroupBtn\r\n        variant=\"contained\"\r\n        size=\"small\"\r\n        color=\"primary\"\r\n        onClick={handleButtonClick}\r\n      >\r\n        {btnText}\r\n      </$RightGroupBtn>\r\n    </$Div>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n\r\nconst $Div = S.div`\r\n  position: relative;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst $H3 = S.h3`\r\n  padding: 0;\r\n  font-size: 2em;\r\n  letter-spacing: -1px;\r\n  display: block;\r\n  color: #666;\r\n  margin: 0.2em;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst $RightGroupBtn = S(Button)`\r\n  &&& {\r\n    position: relative;\r\n    float: right;\r\n    margin: 0 0.3em;\r\n    background-color: ${(prop) => prop.bgcolor};\r\n    color: white;\r\n    top: -36px;\r\n  }\r\n`;\r\n\r\nconst $ExportSpan = S.span`\r\n  margin: 0.5em;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const CustomActive = (active) => {\r\n  if (active) {\r\n    return (\r\n      <div>\r\n        <$ActiveSpan>Active</$ActiveSpan>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <$InActiveSpan>InActive</$InActiveSpan>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst $ActiveSpan = styled.span`\r\n  color: #067dc1;\r\n  border: 1px solid;\r\n  padding: 1px;\r\n`;\r\n\r\nconst $InActiveSpan = styled.span`\r\n  color: red;\r\n  border: 1px solid;\r\n  padding: 1px;\r\n`;\r\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport CommonBtns from \"../../../../components/common-buttons\";\nimport PageHeader from \"../../../../components/page-header\";\nimport Axios from \"../../../../config/axios-config\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { CustomDate } from \"../../../../utilities/custom-date\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { CustomActive } from \"../../../../utilities/custom-active\";\n\nconst AreaList = () => {\n  const admin = useSelector((state) => state.auth.admin);\n  const [areaList, setAreaList] = useState([]);\n  const gridRef= useRef();\n\n  useEffect(() => {\n    Axios({\n      url: \"getAllAreaDto/\" + admin.id,\n      method: \"get\",\n    }).then((res) => {\n      setAreaList((areaList) => [...areaList, ...res.data]);\n    });\n  }, []);\n\n  const defaultColDef = {\n    sortable: true,\n    unSortIcon: true,\n    wrapText: true,\n    resizable: true,\n    autoHeight: true,\n  };\n\n  const columnDefs = [\n    { headerName: \"ID\", field: \"serialNo\" },\n    {\n      headerName: \"Status\",\n      field: \"status\",\n      cellRenderer: (data) => {\n        return CustomActive(data.data.status);\n      },\n    },\n    { headerName: \"Name\", field: \"aName\" },\n    { headerName: \"No of Customers\", field: \"customerCount\" },\n    { headerName: \"No of Supervisors\", field: \"supervisorCount\" },\n    {\n      headerName: \"Last Updated on\",\n      field: \"aDate\",\n      valueFormatter: (data) => {\n        return CustomDate(data.data.aDate);\n      },\n    },\n    {\n      headerName: \"Actions\",\n      width: 125,\n      cellRenderer: (data) => {\n        // here, I was hoping the \"data\" would refer to the entire\n        // row / object being bound, so that I could check for\n        // certain conditions to be true (or false)\n        return (\n          <>\n            <EditIcon sx={{ margin: \"5px\" }} />\n            <ClearIcon sx={{ margin: \"5px\" }} />{\" \"}\n          </>\n        );\n      },\n    },\n  ];\n\n  const handleButtonClick = () => {\n    console.log(\"handleButtonClick\");\n  };\n\n  return (\n    <>\n      <PageHeader header={\"Area Management\"} />\n      <CommonBtns\n        btnText={\"Add Area\"}\n        handleButtonClick={handleButtonClick}\n      ></CommonBtns>\n      <$GridHolder className=\"ag-theme-alpine\">\n        <AgGridReact\n        ref={gridRef}\n          rowData={areaList}\n          columnDefs={columnDefs}\n          defaultColDef={defaultColDef}\n          pagination={true}\n          paginationPageSize={10}\n          enableRangeSelection={true}\n        ></AgGridReact>\n      </$GridHolder>\n    </>\n  );\n};\n\nexport default AreaList;\n\nconst $GridHolder = styled.div`\n  height: 33em;\n  max-width: 100em;\n  margin: 1em;\n`;\n","import moment from \"moment\";\r\n\r\nexport const CustomDate = (date) => {\r\n    let customDate;\r\n    if(date != null) {\r\n        if (date.length > 3) {\r\n            customDate = date[2] + '-' + date[1] + '-' + date[0] + ' ' + date[3] + ':' + date[4] + ':' + date[5];\r\n        } else {\r\n            customDate = moment(String(date[2] + '-' + date[1] + '-' + date[0]), 'D-M-YYYY').format('DD-MM-YYYY');\r\n        }\r\n    }\r\n    return customDate;\r\n}","import { FormControl, InputLabel, MenuItem, Select } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CustomColumnFilterDropdown = ({ options = [], currentValue = '' }) => {\r\n  return (\r\n    <$Div>\r\n      <FormControl\r\n        fullWidth\r\n        sx={{\r\n          \"& .MuiOutlinedInput-notchedOutline\": {\r\n            height: \"28px\",\r\n            top: \"5px\",\r\n          },\r\n          \"& .MuiSelect-root\": {\r\n            height: \"28px\",\r\n            top: \"-8px\",\r\n          },\r\n        }}\r\n      >\r\n        <InputLabel id=\"custom-filter-dropdown\"></InputLabel>\r\n        <Select\r\n          labelId=\"custom-filter-dropdown-label\"\r\n          id=\"custom-filter-dropdown-select\"\r\n          value={currentValue}\r\n          // onChange={handleChange}\r\n        >\r\n          {options.map((o, index) => (\r\n            <MenuItem key={index} value={o}>\r\n              {o}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </$Div>\r\n  );\r\n};\r\n\r\nexport default CustomColumnFilterDropdown;\r\n\r\nconst $Div = styled.div`\r\n  position: relative;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const CustomFilterInput = () => {\r\n  return (\r\n    <$Div>\r\n      <input type={'text'} />\r\n    </$Div>\r\n  );\r\n};\r\n\r\nconst $Div = styled.div`\r\n  input {\r\n      width: 80%;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CustomFilter = (prop) => {\r\n  return <$Div>{prop?.children}</$Div>;\r\n};\r\n\r\nexport default CustomFilter;\r\n\r\nconst $Div = styled.div`\r\nheight: 32px;\r\nmargin: 8px 12px;\r\n`;\r\n","import React from \"react\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport FirstPageIcon from \"@mui/icons-material/FirstPage\";\r\nimport KeyboardArrowLeft from \"@mui/icons-material/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@mui/icons-material/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@mui/icons-material/LastPage\";\r\n\r\nexport const CustomPagination = ({totalRow, handlePageChange, handleChangeRowsPerPage}) => {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePageEvent = (event, newPage) => {\r\n    setPage(newPage);\r\n    handlePageChange(newPage)\r\n  };\r\n\r\n  const handleChangeRowsPerPageEvent = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n    handleChangeRowsPerPage(parseInt(event.target.value, 10))\r\n  };\r\n\r\n  return (\r\n    <TablePagination\r\n      sx={{\r\n        padding: \"0px !important\",\r\n        \"& .MuiTablePagination-menuItem\": {\r\n          textAlign: \"left\",\r\n        },\r\n      }}\r\n      rowsPerPageOptions={[5, 10, 25, { label: \"All\", value: -1 }]}\r\n      colSpan={3}\r\n      count={totalRow}\r\n      rowsPerPage={rowsPerPage}\r\n      page={page}\r\n      SelectProps={{\r\n        inputProps: {\r\n          \"aria-label\": \"rows per page\",\r\n        },\r\n        native: true,\r\n      }}\r\n      onPageChange={handleChangePageEvent}\r\n      onRowsPerPageChange={handleChangeRowsPerPageEvent}\r\n      ActionsComponent={TablePaginationActions}\r\n    />\r\n  );\r\n};\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction TablePaginationActions(props) {\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onPageChange } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onPageChange(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onPageChange(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onPageChange(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexShrink: 0, ml: 2.5 }}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n}\r\n","\r\nexport const customerColumn = [\r\n    {\r\n        label: 'Status',\r\n        value: 'status',\r\n    },\r\n    {\r\n        label: 'S No',\r\n        value: 'serialNo',\r\n    },\r\n    {\r\n        label: 'AS No',\r\n        value: 'asNo',\r\n    },\r\n    {\r\n        label: 'Name',\r\n        value: 'customerName',\r\n    },\r\n    {\r\n        label: 'Code',\r\n        value: 'customerCode',\r\n    },\r\n    {\r\n        label: 'Customer Login',\r\n        value: 'customerLoginId',\r\n    },\r\n    {\r\n        label: 'Phone',\r\n        value: 'mobile',\r\n    },\r\n    {\r\n        label: 'Area',\r\n        value: 'areaId.aName',\r\n    },\r\n    {\r\n        label: 'Plan',\r\n        value: 'planId.pName',\r\n    },\r\n    {\r\n        label: 'Group',\r\n        value: 'groupId.gName',\r\n    },\r\n    {\r\n        label: 'STB No',\r\n        value: 'custStbNo',\r\n    },\r\n    {\r\n        label: 'Balance',\r\n        value: 'balance',\r\n    },\r\n    {\r\n        label: 'Bill Date',\r\n        value: 'expiryDate',\r\n    },{\r\n        label: 'Last Updated',\r\n        value: 'aDate',\r\n    },\r\n]","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { customerColumn } from \"../utilities/const/customer\";\r\n\r\nexport const customerColumnSlice = createSlice({\r\n  name: \"customerColumnSlice\",\r\n  initialState: {\r\n    customerSelectedColumn: customerColumn,\r\n  },\r\n  reducers: {\r\n    setCustomerSelectedColumn: (state, action) => {\r\n      state.customerSelectedColumn = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setCustomerSelectedColumn } = customerColumnSlice.actions;\r\n\r\nexport default customerColumnSlice.reducer;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Axios from \"../../../../config/axios-config\";\r\nimport { CustomActive } from \"../../../../utilities/custom-active\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\nimport PageHeader from \"../../../../components/page-header\";\r\nimport CommonBtns from \"../../../../components/common-buttons\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport styled from \"styled-components\";\r\nimport moment from \"moment\";\r\nimport CustomColumnFilterDropdown from \"../../../../utilities/custom-column-filter-dropdown\";\r\nimport { CustomFilterInput } from \"../../../../utilities/custom-filter-input\";\r\nimport CustomFilter from \"../../../../components/custom-filter\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUpload } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { CustomPagination } from \"../../../../components/pagination\";\r\nimport { customerColumn } from \"../../../../utilities/const/customer\";\r\nimport { MultiSelect } from \"react-multi-select-component\";\r\nimport { setCustomerSelectedColumn } from \"../../../../store/customer-colimn-slice\";\r\nimport \"ag-grid-enterprise\";\r\n\r\nconst CustomerList = () => {\r\n  const dispatch = useDispatch();\r\n  const admin = useSelector((state) => state.auth.admin);\r\n  const drawer = useSelector((state) => state.mainMenu.openDrawer);\r\n  const customerSelectedColumn = useSelector(\r\n    (state) => state.customerSelectedColumn.customerSelectedColumn\r\n  );\r\n  const [customerList, setCustomerList] = useState([]);\r\n  const [customerListCount, setCustomerListCount] = useState(0);\r\n  const [selectedColumn, setSelectedColumn] = useState(customerSelectedColumn);\r\n  const gridRef = useRef();\r\n\r\n  // filter Object\r\n  const customerFilter = {\r\n    pageIndex: 0,\r\n    pageSize: 10,\r\n    status: null,\r\n    serialNo: null,\r\n    asNo: null,\r\n    customerName: null,\r\n    customerCode: null,\r\n    mobile: null,\r\n    area: null,\r\n    plan: null,\r\n    group: null,\r\n    stbNo: null,\r\n    balance: null,\r\n    billDate: null,\r\n    lastUpdate: null,\r\n    sortBy: null,\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios({\r\n      url: \"getCustomerListByAdmin/\" + admin.id,\r\n      method: \"post\",\r\n      data: customerFilter,\r\n    }).then((res) => {\r\n      setCustomerList((customerList) => [\r\n        ...customerList,\r\n        ...res.data.customerList,\r\n      ]);\r\n      setCustomerListCount(res.data.customerCount);\r\n      const allColumnIds = [];\r\n      gridRef.current.columnApi.getAllColumns().forEach((column) => {\r\n        allColumnIds.push(column.getId());\r\n      });\r\n      gridRef.current.columnApi.autoSizeColumns(allColumnIds, false);\r\n    });\r\n  }, []);\r\n\r\n  const defaultColDef = {\r\n    sortable: true,\r\n    unSortIcon: true,\r\n    wrapText: true,\r\n    resizable: true,\r\n    autoHeight: true,\r\n  };\r\n\r\n  const statusFilter = () => {\r\n    return <CustomColumnFilterDropdown options={[\"active\", \"Inactive\"]} />;\r\n  };\r\n\r\n  const columnDefs = [\r\n    {\r\n      headerName: \"Status\",\r\n      field: \"status\",\r\n      cellRenderer: (data) => {\r\n        return CustomActive(data.data.customerActive);\r\n      },\r\n      filter: \"agTextColumnFilter\",\r\n      floatingFilter: true,\r\n      editable: true,\r\n      floatingFilterComponent: statusFilter,\r\n      floatingFilterComponentParams: { suppressFilterButton: true },\r\n    },\r\n    {\r\n      headerName: \"S No\",\r\n      field: \"serialNo\",\r\n      filter: \"agTextColumnFilter\",\r\n      floatingFilter: true,\r\n      editable: true,\r\n      comparator: () => 0,\r\n      floatingFilterComponent: CustomFilterInput,\r\n      floatingFilterComponentParams: { suppressFilterButton: true },\r\n    },\r\n    { headerName: \"AS No\", field: \"asNo\" },\r\n    { headerName: \"Name\", field: \"customerName\" },\r\n    { headerName: \"Code\", field: \"customerCode\" },\r\n    { headerName: \"Customer Login\", field: \"customerLoginId\" },\r\n    { headerName: \"Phone\", field: \"mobile\" },\r\n    { headerName: \"Area\", field: \"areaId.aName\" },\r\n    { headerName: \"Plan\", field: \"planId.pName\" },\r\n    { headerName: \"Group\", field: \"groupId.gName\" },\r\n    { headerName: \"STB No\", field: \"custStbNo\" },\r\n    { headerName: \"Balance\", field: \"balance\" },\r\n    {\r\n      headerName: \"Bill Date\",\r\n      field: \"expiryDate\",\r\n      valueFormatter: (data) => {\r\n        return moment(data.data.expiryDate).format(\"DD-MM-YYYY\");\r\n      },\r\n    },\r\n    {\r\n      headerName: \"Last Updated on\",\r\n      field: \"aDate\",\r\n      valueFormatter: (data) => {\r\n        return moment(data.data.lastUpdate).format(\"DD-MM-YYYY\");\r\n      },\r\n    },\r\n    {\r\n      headerName: \"Actions\",\r\n      width: 125,\r\n      cellRenderer: () => {\r\n        // here, I was hoping the \"data\" would refer to the entire\r\n        // row / object being bound, so that I could check for\r\n        // certain conditions to be true (or false)\r\n        return (\r\n          <>\r\n            <EditIcon sx={{ margin: \"5px\" }} />\r\n            <ClearIcon sx={{ margin: \"5px\" }} />{\" \"}\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const handleButtonClick = () => {\r\n    console.log(\"handleButtonClick\");\r\n  };\r\n\r\n  const onGridReady = () => {\r\n    columnDefs.forEach((c) => {\r\n      if (selectedColumn.some((sc) => sc?.value === c.field)) {\r\n        gridRef.current.columnApi.setColumnVisible(c.field, true);\r\n      } else {\r\n        gridRef.current.columnApi.setColumnVisible(c.field, false);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleMultiSelect = (e) => {\r\n    setSelectedColumn(e);\r\n    dispatch(setCustomerSelectedColumn(e));\r\n    columnDefs.forEach((c) => {\r\n      if (e.some((sc) => sc?.value === c.field)) {\r\n        gridRef.current.columnApi.setColumnVisible(c.field, true);\r\n      } else {\r\n        gridRef.current.columnApi.setColumnVisible(c.field, false);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handlePageChange = (newPage) => {\r\n    customerFilter.pageIndex = newPage;\r\n    Axios({\r\n      url: \"getCustomerListByAdmin/\" + admin.id,\r\n      method: \"post\",\r\n      data: customerFilter,\r\n    }).then((res) => {\r\n      setCustomerList([...res.data.customerList]);\r\n    });\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (pageRow) => {\r\n    customerFilter.pageSize = pageRow !== -1 ? pageRow : customerListCount;\r\n    Axios({\r\n      url: \"getCustomerListByAdmin/\" + admin.id,\r\n      method: \"post\",\r\n      data: customerFilter,\r\n    }).then((res) => {\r\n      setCustomerList([...res.data.customerList]);\r\n    });\r\n  };\r\n\r\n  const handleExcelExport = () => {\r\n    gridRef.current.api.exportDataAsExcel({\r\n      fileName: \"Today\",\r\n      columnKeys: selectedColumn.map((c) => c?.value),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        header={\"Customer Management\"}\r\n        btnText={\"Add Customer\"}\r\n        handleButtonClick={handleButtonClick}\r\n        handleExcelExport={handleExcelExport}\r\n      ></PageHeader>\r\n      {/* <CommonBtns\r\n        btnText={\"Add Customer\"}\r\n        handleButtonClick={handleButtonClick}\r\n      ></CommonBtns> */}\r\n      <CustomFilter>\r\n        <div style={{ marginTop: \"4px\", marginLeft: \"4px\" }}>\r\n          <Button\r\n            sx={{ height: \"32px\", float: \"left\" }}\r\n            variant=\"contained\"\r\n            endIcon={\r\n              <FontAwesomeIcon style={{ height: \"12px\" }} icon={faUpload} />\r\n            }\r\n          >\r\n            Import\r\n          </Button>\r\n          <Button\r\n            sx={{\r\n              height: \"32px\",\r\n              marginLeft: \"4px !important\",\r\n              backgroundColor: \"red !important\",\r\n              color: \"white !important\",\r\n              float: \"left\",\r\n            }}\r\n            variant=\"contained\"\r\n          >\r\n            Clear Filter\r\n          </Button>\r\n          {/* <ColumnFilter columns={customerColumn} handleColumnFilter={handleColumnFilter} /> */}\r\n          <$MultiSelect\r\n            options={customerColumn}\r\n            value={selectedColumn}\r\n            onChange={(e) => handleMultiSelect(e)}\r\n            labelledBy=\"Select\"\r\n          />\r\n        </div>\r\n      </CustomFilter>\r\n      <CustomPagination\r\n        totalRow={customerListCount}\r\n        handlePageChange={handlePageChange}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n      <$GridHolder className=\"ag-theme-alpine\" drawer={drawer}>\r\n        <AgGridReact\r\n          ref={gridRef}\r\n          rowData={customerList}\r\n          columnDefs={columnDefs}\r\n          defaultColDef={defaultColDef}\r\n          enableRangeSelection={true}\r\n          onGridReady={onGridReady}\r\n          onSortChanged={(e) =>\r\n            console.log(\"e\", gridRef.current.columnApi.getColumnState())\r\n          }\r\n          serverSideStoreType={\"partial\"}\r\n          onFilterChanged={() =>\r\n            console.log(gridRef.current.api.getFilterModel())\r\n          }\r\n          sideBar={true}\r\n        ></AgGridReact>\r\n      </$GridHolder>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerList;\r\n\r\nconst $GridHolder = styled.div`\r\n  height: 26em;\r\n  // max-width: ${(prop) => (prop.drawer ? `80%` : `98%`)};\r\n  margin: 1em;\r\n`;\r\n\r\nconst $MultiSelect = styled(MultiSelect)`\r\n  width: 25%;\r\n  top: -35px;\r\n  float: left;\r\n  margin: 0 10px;\r\n`;\r\n","import {\n  Button,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  Radio,\n  RadioGroup,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PageHeader from \"../../components/page-header\";\nimport Axios from \"../../config/axios-config\";\nimport * as Yup from \"yup\";\n\nconst MyProfile = () => {\n  const navigate = useNavigate();\n  const [admin, setAdmin] = useState({});\n\n  useEffect(() => {\n    Axios({\n      url: \"findAdmin/\" + sessionStorage.getItem(\"username\"),\n      method: \"get\",\n    }).then((res) => {\n      setAdmin((admin) => ({ ...admin, ...res.data }));\n    });\n    // console.log(\"admin\", admin);\n  }, [admin.username]);\n\n  const handleCancel = () => {\n    navigate(\"/dashboard\", { replace: true });\n  };\n\n  const saveAdmin = (adminValue) => {\n    Axios({\n      url: \"updateAdmin\",\n      method: \"post\",\n      data: adminValue,\n    }).then((res) => {\n      navigate(\"/dashboard\", { replace: true });\n    });\n  };\n\n  const adminSchema = Yup.object().shape({\n    username: Yup.string().required(\"Required\"),\n    password: Yup.string().required(\"Required\"),\n    name: Yup.string().required(\"Required\"),\n    companyName: Yup.string().required(\"Required\"),\n    mobile: Yup.string().min(10).max(10).required(\"Required\"),\n  });\n\n  return (\n    <>\n      <PageHeader header={\"Edit Profile\"} />\n      <$Div>\n        <Formik\n          enableReinitialize\n          initialValues={{\n            username: admin.username,\n            password: admin.password,\n            name: admin.name,\n            companyName: admin.companyName,\n            mobile: admin.mobile,\n            location: admin.location,\n            headerInfo: admin.headerInfo,\n            headerInfo1: admin.headerInfo1,\n            smsTextEnglish: admin.smsTextEnglish,\n            smsTextTamil: admin.smsTextTamil,\n            smsMode: admin.smsMode,\n            language: admin.language,\n            id: admin.id,\n            adminSmsServer: admin.adminSmsServer,\n            address: admin.address,\n            lastLogin: admin.lastLogin,\n            payment: admin.payment,\n            profileChange: admin.profileChange,\n            remarks: admin.remarks,\n            renewal: admin.renewal,\n            smsCount: admin.smsCount,\n            smsSever: admin.smsSever,\n            status: admin.status,\n            upiId: admin.upiId,\n          }}\n          validationSchema={adminSchema}\n          onSubmit={(values) => {\n            // console.log(JSON.stringify(values, null, 2));\n            saveAdmin(values);\n          }}\n        >\n          {({ values, setFieldValue, handleSubmit, handleChange, errors }) => (\n            <form onSubmit={handleSubmit}>\n              {console.log(\"error\", errors)}\n              <Grid item xs={4}>\n                <$Typography sx={{ color: \"red\" }}>\n                  {errors.mobile && \"Enter valid Mobile Number\"}\n                  {errors.password && \"Enter valid password\"}\n                  {errors.name && \"Enter valid Name\"}\n                  {errors.companyName && \"Enter valid Company Name\"}\n                </$Typography>\n              </Grid>\n              {errors && <Grid containersx={{ margin: \"0.5em 0\" }}></Grid>}\n              <Grid container spacing={2} sx={{ margin: \"0.5em 0\" }}>\n                <Grid item xs={3}>\n                  <$Typography>\n                    Username<$RequireSpan>*</$RequireSpan>\n                  </$Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    fullWidth\n                    id=\"username\"\n                    name=\"username\"\n                    value={values.username}\n                    onChange={handleChange}\n                    disabled\n                  />\n                </Grid>\n              </Grid>\n              <Grid container spacing={2} sx={{ margin: \"0.5em 0\" }}>\n                <Grid item xs={3}>\n                  <$Typography>\n                    Password<$RequireSpan>*</$RequireSpan>\n                  </$Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    fullWidth\n                    id=\"password\"\n                    name=\"password\"\n                    value={values.password}\n                    onChange={handleChange}\n                  />\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={2} sx={{ margin: \"0.5em 0\" }}>\n                <Grid item xs={3}>\n                  <$Typography>\n                    Name<$RequireSpan>*</$RequireSpan>\n                  </$Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    fullWidth\n                    id=\"name\"\n                    name=\"name\"\n                    value={values.name}\n                    onChange={handleChange}\n                  />\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={2} sx={{ margin: \"0.5em 0\" }}>\n                <Grid item xs={3}>\n                  <$Typography>\n                    Company Name<$RequireSpan>*</$RequireSpan>\n                  </$Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    fullWidth\n                    id=\"companyName\"\n                    name=\"companyName\"\n                    value={values.companyName}\n                    onChange={handleChange}\n                  />\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={2} sx={{ margin: \"0.5em 0\" }}>\n                <Grid item xs={3}>\n                  <$Typography>\n                    Mobile<$RequireSpan>*</$RequireSpan>\n                  </$Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    fullWidth\n                    id=\"mobile\"\n                    name=\"mobile\"\n                    value={values.mobile}\n                    onChange={handleChange}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">+91</InputAdornment>\n                      ),\n                    }}\n                  />\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={2} sx={{ margin: \"0.5em 0\" }}>\n                <Grid item xs={3}>\n                  <$Typography>Location</$Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    fullWidth\n                    id=\"location\"\n                    name=\"location\"\n                    value={values.location}\n                    onChange={handleChange}\n                  />\n                </Grid>\n              </Grid>\n              <Grid container spacing={2} sx={{ margin: \"0.5em 0\" }}>\n                <Grid item xs={3}>\n                  <$Typography>Bill Header One</$Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    fullWidth\n                    id=\"headerInfo\"\n                    name=\"headerInfo\"\n                    value={values.headerInfo}\n                    onChange={handleChange}\n                  />\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={2} sx={{ margin: \"0.5em 0\" }}>\n                <Grid item xs={3}>\n                  <$Typography>Bill Header Two</$Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    fullWidth\n                    id=\"headerInfo1\"\n                    name=\"headerInfo1\"\n                    value={values.headerInfo1}\n                    onChange={handleChange}\n                  />\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={2} sx={{ margin: \"0.5em 0\" }}>\n                <Grid item xs={3}>\n                  <$Typography>English SMS Content</$Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    fullWidth\n                    id=\"smsTextEnglish\"\n                    name=\"smsTextEnglish\"\n                    value={values.smsTextEnglish}\n                    onChange={handleChange}\n                    multiline\n                    disabled\n                  />\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={2} sx={{ margin: \"0.5em 0\" }}>\n                <Grid item xs={3}>\n                  <$Typography>Tamil SMS Content</$Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    fullWidth\n                    id=\"smsTextTamil\"\n                    name=\"smsTextTamil\"\n                    value={values.smsTextTamil}\n                    onChange={handleChange}\n                    multiline\n                    disabled\n                  />\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={2} sx={{ margin: \"0.5em 0\" }}>\n                <Grid item xs={3}>\n                  <$Typography>SMS Language</$Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <FormControl>\n                    <RadioGroup\n                      row\n                      aria-labelledby=\"sms-mode-group-label\"\n                      name=\"smsMode\"\n                      id=\"smsMode\"\n                      value={values.smsMode ?? false}\n                      onChange={(event) => {\n                        setFieldValue(\"smsMode\", event.currentTarget.value);\n                      }}\n                    >\n                      <FormControlLabel\n                        value={true}\n                        control={<Radio />}\n                        label=\"English\"\n                        // onChange={() => formik.values.smsMode = true}\n                      />\n                      <FormControlLabel\n                        value={false}\n                        control={<Radio />}\n                        label=\"Tamil\"\n                        // onChange={() => formik.values.smsMode = false}\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={2} sx={{ margin: \"0.5em 0\" }}>\n                <Grid item xs={3}>\n                  <$Typography>App Language</$Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <FormControl>\n                    <RadioGroup\n                      row\n                      aria-labelledby=\"app-language-radio-buttons-group-label\"\n                      name=\"language\"\n                      id=\"language\"\n                      value={values.language ?? 1}\n                      onChange={(event) => {\n                        setFieldValue(\"language\", event.currentTarget.value);\n                      }}\n                    >\n                      <FormControlLabel\n                        value={1}\n                        control={<Radio />}\n                        label=\"English\"\n                      />\n                      <FormControlLabel\n                        value={2}\n                        control={<Radio />}\n                        label=\"Regional\"\n                      />\n                      <FormControlLabel\n                        value={3}\n                        control={<Radio />}\n                        label=\"Both\"\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={2} sx={{ margin: \"0.5em 0\" }}>\n                <Grid item xs={4}>\n                  <Button\n                    color=\"error\"\n                    variant=\"contained\"\n                    fullWidth\n                    type=\"submit\"\n                    onClick={handleCancel}\n                  >\n                    Cancel\n                  </Button>\n                </Grid>\n                <Grid item xs={4}>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    fullWidth\n                    type=\"submit\"\n                    disabled={Object.keys(errors).length !== 0}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n              </Grid>\n            </form>\n          )}\n        </Formik>\n      </$Div>\n    </>\n  );\n};\n\nexport default MyProfile;\n\nconst $Div = styled.div`\n  margin: 0 10em;\n`;\n\nconst $Typography = styled(Typography)`\n  padding-top: 0.4em;\n  font-size: 1.2rem;\n  float: right;\n  padding-right: 1em;\n`;\n\nconst $RequireSpan = styled.span`\n  color: red;\n`;\n","import React from \"react\";\nimport { Navigate, Route, Routes, useLocation } from \"react-router-dom\";\nimport Login from \"../pages/login/login\";\nimport Main from \"../pages/main/main\";\nimport AdminDashboard from \"../pages/main/master/admin-dashboard\";\nimport AreaList from \"../pages/main/master/area/area-list\";\nimport CustomerList from \"../pages/main/master/customer/customer-list\";\nimport MyProfile from \"../pages/profile/my-profile\";\n\nconst CustomRoutes = () => {\n\n  return (\n    <Routes>\n      <Route\n        path=\"/\"\n        element={\n          <AuthenticatedRoute>\n            <Main />\n          </AuthenticatedRoute>\n        }\n      >\n        <Route path=\"dashboard\" element={<AdminDashboard />}></Route>\n        <Route path=\"my-profile\" element={<MyProfile />}></Route>\n        <Route path=\"area\" element={<AreaList />}></Route>\n        <Route path=\"customer\" element={<CustomerList />}></Route>\n        {/* <Route path=\"*\" element={<Navigate to=\"dashboard\" replace />} /> */}\n      </Route>\n      <Route path=\"/login\" element={<Login />} />\n    </Routes>\n  );\n};\n\nexport default CustomRoutes;\n\nconst AuthenticatedRoute = ({ children }) => {\n  const location = useLocation();\n\n  const basicAuth = sessionStorage.getItem(\"basicauth\");\n  if (!basicAuth) {\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n  return children;\n};\n","import { BrowserRouter, HashRouter  } from \"react-router-dom\";\nimport \"./App.css\";\nimport CustomRoutes from \"./config/custom-routes\";\nimport 'ag-grid-community/dist/styles/ag-grid.css'; // Core grid CSS, always needed\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css'; // Optional theme CSS\n\nfunction App() {\n  return (\n    <HashRouter >\n      <CustomRoutes />\n    </HashRouter >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\n\nimport authReducer from '../store/auth-slice';\nimport mainMenuSlice from '../store/main-menu-slice';\nimport customerColumnSlice from '../store/customer-colimn-slice';\n\nconst rootReducer = combineReducers({\n\tauth: authReducer,\n\tmainMenu: mainMenuSlice,\n\tcustomerSelectedColumn: customerColumnSlice,\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux'; \nimport thunk from 'redux-thunk'; \nimport { persistStore, persistReducer } from 'redux-persist' // imports from redux-persist\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\nimport rootReducer from './root-reducer' // Root reducer\n\nconst persistConfig = { // configuration object for redux-persist\n    key: 'root',\n    storage, // define which storage to use\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer) // create a persisted reducer\n\nconst store = createStore(\n    persistedReducer, // pass the persisted reducer instead of rootReducer to createStore\n    applyMiddleware(thunk) // add any middlewares here\n)\n\nconst  persistor = persistStore(store); // used to create the persisted store, persistor will be used in the next step\n\nexport {store, persistor}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./store/store\";\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}